{
	"compiler": {
		"version": "0.7.6+commit.7338295f"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint24",
						"name": "fee",
						"type": "uint24"
					},
					{
						"indexed": true,
						"internalType": "int24",
						"name": "tickSpacing",
						"type": "int24"
					}
				],
				"name": "FeeAmountEnabled",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "oldOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnerChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "token0",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "token1",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint24",
						"name": "fee",
						"type": "uint24"
					},
					{
						"indexed": false,
						"internalType": "int24",
						"name": "tickSpacing",
						"type": "int24"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "pool",
						"type": "address"
					}
				],
				"name": "PoolCreated",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenA",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "tokenB",
						"type": "address"
					},
					{
						"internalType": "uint24",
						"name": "fee",
						"type": "uint24"
					}
				],
				"name": "createPool",
				"outputs": [
					{
						"internalType": "address",
						"name": "pool",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint24",
						"name": "fee",
						"type": "uint24"
					},
					{
						"internalType": "int24",
						"name": "tickSpacing",
						"type": "int24"
					}
				],
				"name": "enableFeeAmount",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint24",
						"name": "",
						"type": "uint24"
					}
				],
				"name": "feeAmountTickSpacing",
				"outputs": [
					{
						"internalType": "int24",
						"name": "",
						"type": "int24"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint24",
						"name": "",
						"type": "uint24"
					}
				],
				"name": "getPool",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "parameters",
				"outputs": [
					{
						"internalType": "address",
						"name": "factory",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "token0",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "token1",
						"type": "address"
					},
					{
						"internalType": "uint24",
						"name": "fee",
						"type": "uint24"
					},
					{
						"internalType": "int24",
						"name": "tickSpacing",
						"type": "int24"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_owner",
						"type": "address"
					}
				],
				"name": "setOwner",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"createPool(address,address,uint24)": {
					"details": "tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.",
					"params": {
						"fee": "The desired fee for the pool",
						"tokenA": "One of the two tokens in the desired pool",
						"tokenB": "The other of the two tokens in the desired pool"
					},
					"returns": {
						"pool": "The address of the newly created pool"
					}
				},
				"enableFeeAmount(uint24,int24)": {
					"details": "Fee amounts may never be removed once enabled",
					"params": {
						"fee": "The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)",
						"tickSpacing": "The spacing between ticks to be enforced for all pools created with the given fee amount"
					}
				},
				"setOwner(address)": {
					"details": "Must be called by the current owner",
					"params": {
						"_owner": "The new owner of the factory"
					}
				}
			},
			"stateVariables": {
				"feeAmountTickSpacing": {
					"details": "A fee amount can never be removed, so this value should be hard coded or cached in the calling context",
					"params": {
						"fee": "The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee"
					},
					"return": "The tick spacing"
				},
				"getPool": {
					"details": "tokenA and tokenB may be passed in either token0/token1 or token1/token0 order",
					"params": {
						"fee": "The fee collected upon every swap in the pool, denominated in hundredths of a bip",
						"tokenA": "The contract address of either token0 or token1",
						"tokenB": "The contract address of the other token"
					},
					"return": "pool The pool address"
				},
				"owner": {
					"details": "Can be changed by the current owner via setOwner",
					"return": "The address of the factory owner"
				}
			},
			"title": "Canonical Uniswap V3 factory",
			"version": 1
		},
		"userdoc": {
			"events": {
				"FeeAmountEnabled(uint24,int24)": {
					"notice": "Emitted when a new fee amount is enabled for pool creation via the factory"
				},
				"OwnerChanged(address,address)": {
					"notice": "Emitted when the owner of the factory is changed"
				},
				"PoolCreated(address,address,uint24,int24,address)": {
					"notice": "Emitted when a pool is created"
				}
			},
			"kind": "user",
			"methods": {
				"createPool(address,address,uint24)": {
					"notice": "Creates a pool for the given two tokens and fee"
				},
				"enableFeeAmount(uint24,int24)": {
					"notice": "Enables a fee amount with the given tickSpacing"
				},
				"feeAmountTickSpacing(uint24)": {
					"notice": "Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled"
				},
				"getPool(address,address,uint24)": {
					"notice": "Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist"
				},
				"owner()": {
					"notice": "Returns the current owner of the factory"
				},
				"parameters()": {
					"notice": "Get the parameters to be used in constructing the pool, set transiently during pool creation."
				},
				"setOwner(address)": {
					"notice": "Updates the owner of the factory"
				}
			},
			"notice": "Deploys Uniswap V3 pools and manages ownership and control over pool protocol fees",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/UniswapV3Factory_flattened.sol": "UniswapV3Factory"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 500
		},
		"remappings": []
	},
	"sources": {
		"contracts/UniswapV3Factory_flattened.sol": {
			"keccak256": "0xd79b13d16d2c2e6de9b3ecb29cd1d85e76845e6801f9fff002f5cb43bc5226a2",
			"urls": [
				"bzz-raw://5551132fbab448acec3a5bd64685a910ca38ebc3d5d3c62b746c8760ba6a8739",
				"dweb:/ipfs/Qme5MZn5GQHZHSbQwnPXxhkHooKmhM84HYckCChZ6Loa7P"
			]
		}
	},
	"version": 1
}